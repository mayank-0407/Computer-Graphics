#include <glut.h>
#include <cmath>

int a = 80; 
int b = 50;

void drawPixel(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

void drawEllipseMidpoint(int a, int b) {
    int x = 0, y = b;
    int a_sqr = a * a;
    int b_sqr = b * b;
    int two_a_sqr = 2 * a_sqr;
    int two_b_sqr = 2 * b_sqr;
    int p;

    // Region 1
    p = round(b_sqr - a_sqr * b + 0.25 * a_sqr);
    while (two_b_sqr * x < two_a_sqr * y) {
        drawPixel(x, y);
        drawPixel(-x, y);
        drawPixel(x, -y);
        drawPixel(-x, -y);

        x++;
        if (p < 0)
            p += two_b_sqr * x + b_sqr;
        else {
            y--;
            p += two_b_sqr * x - two_a_sqr * y + b_sqr;
        }
    }

    // Region 2
    p = round(b_sqr * (x + 0.5) * (x + 0.5) + a_sqr * (y - 1) * (y - 1) - a_sqr * b_sqr);
    while (y >= 0) {
        drawPixel(x, y);
        drawPixel(-x, y);
        drawPixel(x, -y);
        drawPixel(-x, -y);

        y--;
        if (p > 0)
            p += -two_a_sqr * y + a_sqr;
        else {
            x++;
            p += two_b_sqr * x - two_a_sqr * y + a_sqr;
        }
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 1.0, 1.0);
    drawEllipseMidpoint(a, b);

    glFlush();
}

void init() {
    glClearColor(0.0, 0.0, 0.0, 0.0); 
    gluOrtho2D(-100, 100, -100, 100);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400, 400);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Midpoint Ellipse Algorithm");

    init();
    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}
